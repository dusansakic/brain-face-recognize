{"ast":null,"code":"import _classCallCheck from \"D:\\\\facerecognitionbrain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\facerecognitionbrain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\facerecognitionbrain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\facerecognitionbrain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\facerecognitionbrain\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nvar app = new Clarifai.App({\n  apiKey: '528d40a08b85493a9f75685081848122'\n});\nvar particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.calculateFaceLocation = function (data) {\n      var clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      var image = document.getElementById('inputimage');\n      var width = Number(image.width);\n      var height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    _this.displayFaceBox = function (box) {\n      _this.setState({\n        box: box\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input).then(function (response) {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: _this.state.user.id\n            })\n          });\n        }\n\n        _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        _this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: true\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'Signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('http://localhost:3000').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return console.log(data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })) : route === 'Signin' ? React.createElement(Signin, {\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\facerecognitionbrain\\src\\App.js"],"names":["React","Component","Clarifai","Particles","Navigation","FaceRecognition","Logo","ImageLinkForm","Signin","Register","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","catch","err","console","log","onRouteChange","route","isSignedIn","json"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Clarifai  from'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '528d40a08b85493a9f75685081848122'\n });\n \nconst particlesOptions ={\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable:true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input:'',\n      imageUrl:'',\n      box:{\n\n      },\n      route:'Signin',\n      isSignedIn:false,\n      user: {\n            id:'',\n            name:'',\n            email:'',\n            \n            entries: 0,\n            joined: ''\n      }\n      \n    }\n  }\n\n  loadUser = (data) =>{\n    this.setState({user:{\n            id:data.id,\n            name:data.name,\n            email:data.email,\n            \n            entries: data.entries,\n            joined: data.joined \n    }})\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(data => console.log(data))\n  }\n\n  calculateFaceLocation = (data)=>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n   \n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    \n    this.setState({box: box});\n  }\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n  }\n\n  onButtonSubmit = () =>{\n    this.setState({imageUrl:this.state.input})\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n      .then(response =>{\n        if(response){\n          fetch('http://localhost:3000/image',{\n                method:'put',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                id:this.state.user.id\n            })\n          })\n        }\n      \n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n      .catch(err => console.log(err));\n     \n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState({isSignedIn: false});\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n      <Particles className=\"particles\"\n              params={particlesOptions}\n              \n            />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route === 'home' \n           \n          ? <div> \n              <Logo />\n              <Rank />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n \n            </div>\n          :(\n            route ==='Signin' \n            ?<Signin onRouteChange={this.onRouteChange}/>\n            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n            \n        }\n        \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}